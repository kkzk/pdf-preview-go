name: CI - Build and Test (Windows)

on:
  pull_request:
    branches: [ master, main, dev ]
  push:
    branches: [ master, main, dev ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  WAILS_VERSION: v2.10.2

jobs:

  # バックエンド・フロントエンド統合品質チェック
  quality-check:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install Go dependencies
      run: go mod download

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

    # --- Go品質チェック ---
    - name: Run go fmt
      shell: pwsh
      run: |
        $files = gofmt -s -l .
        if ($files) {
          Write-Host "以下のファイルがgo fmtでフォーマットされていません:"
          $files
          exit 1
        }

    - name: Run go vet
      run: go vet .

    - name: Run go mod tidy check
      shell: bash
      run: |
        go mod tidy
        if ! git diff --quiet go.mod go.sum; then
          echo "go mod tidyが必要です"
          git diff go.mod go.sum
          exit 1
        fi

  # Windowsビルドテスト
  build-test:
    runs-on: windows-latest
    needs: [quality-check]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

    # Windows開発用ビルドテスト（NSISインストーラーは作成しない）
    - name: Test Build (Windows Dev Mode)
      run: wails build -platform windows/amd64 -devtools

    # ビルドされたファイルが存在することを確認
    - name: Verify build artifacts
      shell: bash
      run: |
        echo "Build directory contents:"
        find build -type f 2>/dev/null || echo "Build directory not found"
        
        # exe ファイルが生成されていることを確認
        find build -name "*.exe" | head -1 | grep -q "." || (echo "No exe file found" && exit 1)
        
        echo "✅ Windows用ビルドアーティファクトが正常に生成されました"
